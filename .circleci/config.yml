# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
jobs:
  build:
    docker:
      # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
  build-image:
    docker:
      - image: docker:20.10.7-git

    working_directory: ~/udacity-project05

    steps:
      - setup_remote_docker:
          version: 20.10.7
      - checkout
      - run:
          name: Build and push Docker image
          command: |
            docker build -t my-project05 .
            docker tag my-project05 tamln2/my-project05:latest
            echo $DOCKER_PASS | docker login -u tamln2 --password Tam04031993!
            docker push tamln2/my-project05:latest
  create-cluster:
    docker:
      - image: docker:20.10.7-git

    working_directory: ~/project

    steps:
      - setup_remote_docker:
          version: 20.10.7
      - checkout
      - run:
          name: Build and push Docker image
          command: |
            docker build -t dgbwm .
            docker tag dgbwm wils93/udacity_capstone_prj5:latest
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push wils93/udacity_capstone_prj5:latest

workflows:
  default:
    jobs:
      - build
      - build-image:
          requires:
            - build
      - aws-eks/create-cluster:
          cluster-name: demo-app
          aws-region: us-east-1
          node-zones: "us-east-1a,us-east-1b"
          requires:
            - build-image
